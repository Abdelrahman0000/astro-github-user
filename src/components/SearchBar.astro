---
import { useState } from 'preact/hooks';
import UserList from './UserList';
import UserCard from './UserCard';
import { useDebounce } from '../hooks/useDebounce';
import { favoritesStore, showFavoritesStore, toggleShowFavorites } from '../stores/useStores';
import { fetchUsers } from '../api/users';

const [query, setQuery] = useState('');
const debouncedQuery = useDebounce(query, 500);
const [users, setUsers] = useState([]);
const [loading, setLoading] = useState(false);
const favorites = favoritesStore.get();
const showFavorites = showFavoritesStore.get();

const handleSearch = async () => {
  if (debouncedQuery.trim().length < 3) return;
  setLoading(true);
  try {
    const data = await fetchUsers(debouncedQuery);
    setUsers(data);
  } catch (error) {
    console.error('Error fetching users:', error);
  } finally {
    setLoading(false);
  }
};

const toggleFavorite = (user) => {
  const updatedFavorites = favorites.some(fav => fav.id === user.id)
    ? favorites.filter(fav => fav.id !== user.id)
    : [...favorites, user];
  favoritesStore.set(updatedFavorites);
};
---

<div class="searchContainer">
  <div class="searchBar">
    {!showFavorites ? (
      <div class="searchBarInner">
        <input type="text" bind:value={query} onInput={handleSearch} placeholder="Search GitHub Users" />
      </div>
    ) : (
      <div class="searchBarInner">
        <button onClick={toggleShowFavorites}>Back</button>
        <h3>Favorites</h3>
      </div>
    )}
    <button onClick={toggleShowFavorites} aria-label={showFavorites ? "Show search" : "Show favorites"}>
      <img src={showFavorites ? "/star-active.svg" : "/star.svg"} alt="Star Icon" />
    </button>
  </div>

  {loading ? (
    <p>Loading...</p>
  ) : showFavorites ? (
    favorites.length > 0 ? (
      <div class="usersContainer">
        {favorites.map(user => <UserCard key={user.id} user={user} isFavorite onToggleFavorite={() => toggleFavorite(user)} />)}
      </div>
    ) : (
      <p>No favorites yet.</p>
    )
  ) : (
    users.length > 0 ? (
      <UserList users={users} toggleFavorite={toggleFavorite} favorites={favorites} />
    ) : (
      <p>No users found.</p>
    )
  )}
</div>
